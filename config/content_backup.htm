<h1>About</h1>
<p>40523252 王彥筑</p>
<p>倉儲：<a href="https://github.com/40523252/cd2021">https://github.com/40523252/cd2021</a></p>
<p>網站：<a href="https://40523252.github.io/cd2021/content/index.html">https://40523252.github.io/cd2021/content/index.html</a></p>
<p><span>Stage1分組倉儲：<a href="https://github.com/40523252/stage1-ag2">https://github.com/40523252/stage1-ag2</a></span></p>
<p>Stage1分組網頁：<a href="https://40623121.github.io/stage1-ag2/content/index.html">https://40623121.github.io/stage1-ag2/content/index.html</a></p>
<p>Stage2分組倉儲：<a href="https://github.com/40523252/stage2-ag8">https://github.com/40523252/stage2-ag8</a></p>
<p>Stage2分組網頁：<a href="https://40823154.github.io/stage2-ag8/content/index.html">https://40823154.github.io/stage2-ag8/content/index.html</a></p>
<p></p>
<p></p>
<h1>建立網站</h1>
<p>建立個人倉儲</p>
<ol>
<li>下載老師提供的<a href="https://drive.google.com/file/d/1R6vAAWdNDigmyvFFQTKyM-XNKOWeCFJU/view"> kmol2021_spring_v2.7z</a></li>
<li>在cmd中輸入自己的<span style="color: #993300;">user name</span> 和 <span style="color: #993300;">suer email</span></li>
<li><span color="#993300" style="color: #000000; background-color: #ffffff;">進入此<a href="https://github.com/mdecourse/cmstemplate">網址</a></span>
<p><img alt="" height="322" src="/images/網站1.png" width="600"/></p>
<span color="#993300" style="color: #000000; background-color: #ffffff;"><img alt="" height="322" src="/images/網站2.png" width="600"/></span></li>
<li>在cmd上面輸入 (網址的部分是自己倉儲的網址) 
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">git clone --recurse-submodules 網址</pre>
<p>例如：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">git clone --recuse-submodules https://github.com/40523252/cd2021.git</pre>
</li>
<li>在網站工具列的Sittings會找到<strong>Github pages</strong>
<h6 class="Subhead-heading">把設定設成跟以下圖片一樣建設網頁就可以取得進入網站的網址</h6>
<img alt="" height="322" src="/images/網站3.png" width="600"/></li>
<li>
<h6 class="Subhead-heading"></h6>
<img alt="" height="322" src="/images/網站4.png" width="600"/><br/> </li>
</ol>
<h1>SSH流程</h1>
<p>使用SSH是為了簡化把更新的檔案推送到倉儲的流程</p>
<p></p>
<p>1.先在cmd裡輸入sh</p>
<p><img alt="" height="313" src="/images/SHH 1.png" width="600"/></p>
<p></p>
<p>2.再按Enter 直到出現以下視窗 <span style="color: #993300;">底下的路徑是SSH檔案所在位置</span></p>
<p><img alt="" height="313" src="/images/SSh 2.png" width="600"/></p>
<p></p>
<p>3.找到SSH檔案把id_rsa.pub 放入Scite裡</p>
<p><img alt="" height="336" src="/images/SSH4.png" width="600"/></p>
<p></p>
<p>4.再進入github網頁 找到Setting 的 <span style="color: #993300;">SSH and GPG keys<span style="color: #000000;"> 按下</span>New SSH key</span></p>
<p><img alt="" height="322" src="/images/SSH5.png" width="600"/></p>
<p></p>
<p>5.在Title 打上學號 底下文字就複製剛剛放到Scite 裡的一串代碼</p>
<p><img alt="" height="322" src="/images/SSH6.png" width="600"/></p>
<p></p>
<p>6.到putty 在 Host Name 和 Save Sessions 輸入 <span style="color: #993300;">github.com </span><img alt="" height="542" src="/images/SSH7.png" width="601"/></p>
<p></p>
<p>7.路徑選擇ppk鑰匙檔案</p>
<p><img alt="" height="542" src="/images/SSH8.png" width="601"/></p>
<p></p>
<p>8.把Start.bat 放入Scite 並進行跟改 </p>
<p>   寫入</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">set GIT_HOME=%Disk%:\portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe</pre>
<p><img alt="" height="783" src="/images/SSH9.png" width="600"/></p>
<p></p>
<p>9.再到倉儲資料夾裡的<span style="color: #993300;">.git (隱藏資料夾) <span style="color: #000000;">選擇Config 放入Scite 進行編輯</span></span></p>
<p></p>
<p><img alt="" height="450" src="/images/SSH10.png" width="600"/></p>
<p></p>
<p>10.輸入 url=git@github.com:學號/倉儲名稱.git</p>
<p>     並且把上面一行註解掉</p>
<p><img alt="" height="643" src="/images/SSH11.png" width="600"/></p>
<p></p>
<p>11.SSH即可完成</p>
<h1>四人分組W5-W8</h1>
<p><span> </span><a href="http://github.com/40523252/cd2021">40523252 repo</a><span> | </span><a href="http://40523252.github.io/cd2021">40523252 site</a><span> 王彥筑</span></p>
<p><span><span> <a href="http://github.com/40823154/cd2021">40823154 repo</a><span><span> </span>|<span> </span></span><a href="http://40823154.github.io/cd2021">40823154 site</a> 張宸嘉</span></span></p>
<p><span><span> <a href="http://github.com/40823103/cd2021">40823103 repo</a><span><span> </span>|<span> </span></span><a href="http://40823103.github.io/cd2021">40823103 site</a><span><span> 呂霈瑜</span></span></span></span></p>
<p><span><span><span><span> <a href="http://github.com/40823107/cd2021">40823107 repo</a><span><span> </span>|<span> </span></span><a href="http://40823107.github.io/cd2021">40823107 site</a> 吳嘉欣</span></span></span></span></p>
<h2>分配工作</h2>
<table style="width: 281.539px;">
<tbody>
<tr style="height: 30px;">
<td style="width: 116px; height: 30px; text-align: center;">繪製零件圖</td>
<td style="width: 150.539px; height: 30px; text-align: center;">40823103  呂霈瑜</td>
</tr>
<tr style="height: 21.973px;">
<td style="width: 116px; height: 21.973px; text-align: center;">模擬</td>
<td style="width: 150.539px; height: 21.973px; text-align: center;">40823107  吳嘉欣</td>
</tr>
<tr style="height: 20px;">
<td style="width: 116px; height: 20px; text-align: center;">編輯小組網頁</td>
<td style="width: 150.539px; height: 20px; text-align: center;">40523252  王彥筑</td>
</tr>
<tr style="height: 24px;">
<td style="width: 116px; height: 24px; text-align: center;">DPF製作</td>
<td style="width: 150.539px; height: 24px; text-align: center;">40823154  張宸嘉</td>
</tr>
</tbody>
</table>
<h2>討論主題</h2>
<p><span><span><span><span>Pegasus Automata</span></span></span></span></p>
<p><span><span><span><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8QzeYpuuhjw" width="560"></iframe></span></span></span></span></p>
<h2>模擬機構</h2>
<p>Solidworks模擬</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/NVVsvlLOesE" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>第一次組裝時不是很熟悉 雖然看起來組裝好了沒問題 </p>
<p>但是運轉起來還是沒有成功 也卡卡的不太順</p>
<p>沒有定義好</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/J2XMdp67vhA" title="YouTube video player" width="560"></iframe></p>
<p><span><span><span><span>第二次模擬 零件不能運轉 應該是轉速不夠</span></span></span></span></p>
<p><span><span><span><span>也有可能是扭距不夠</span></span></span></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/zpGdLqk_q4I" title="YouTube video player" width="560"></iframe></p>
<p><span><span><span><span></span></span></span></span></p>
<p><span><span><span><span>第三次模擬也是 後來發現齒輪們有對齊到</span></span></span></span></p>
<p><span><span><span><span>所以重新繼續定義這些零件</span></span></span></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/pz5mESoG0lE" title="YouTube video player" width="560"></iframe></p>
<p><span><span><span><span></span></span></span></span></p>
<p>第四次模擬有比之前好很多 有讓齒輪互相對齊</p>
<p>所以一開始零件可以順利運轉 但是最後還是有問題 </p>
<p>所以沒辦法順利轉動<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/j_NWZqjXt6w" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p></p>
<p></p><h1>TASK</h1>
<p></p>
<h2>task1</h2>
<pre class="brush:py;auto-links:false;toolbar:false;tab-size:6" contenteditable="false">with open("stage3_2a.txt") as a:   #開啟Stage3_2a.txt檔案 令他為a
    data = a.readlines()  #data=讀a檔案裡的資料
    print(data) #列出data讀到的文字
for i in range(len(data)):  # 將範圍(range)訂在data讀到的len(有6個)裡就不會出現list index out of range的問題 得到的元素放入i 再讓i做迴圈
    group = data[i].rstrip("\n").split("\t") #讀取data的第"i"個 把\n刪除讓他不會自動換行 在加上\t 新增空格
    print('&lt;p&gt;'+group[0]+'|&lt;a href="https://'+group[1]+'.github.io/stage3-ag'+group[0][9]+'"&gt;網站&lt;/a&gt;|&lt;a href="https://github.com/'+group[2]+'/stage3-ag'+group[0][9]+'"&gt;倉儲&lt;/a&gt;&lt;/p&gt;')
    #列出list 中的內容再加入html的格式 和個人網址
 
 
    for j in range(2,18,2): #對j做迴圈把範圍定在2~18 每次跳兩個
        try:
            print('&lt;p&gt;'+group[j]+'|Website:'+'&lt;a href="https://'+group[j]+'.github.io/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;'+'|Repository:'+'&lt;a href="https://github.com/'+group[j]+'/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;&lt;/p&gt;')   #跟上面一樣列出倉儲網址
        except:
            continue  #繼續讓迴圈跑</pre>
<p style="text-align: center;"><br/>列出的成果如下</p>
<p></p>
<p>stage3_ag1|  <a href="https://40823131.github.io/stage3-ag1">網站</a>   <a href="https://github.com/40823131/stage3-ag1">倉儲</a></p>
<p>40823131|Website:<a href="https://40823131.github.io/cd2021">40823131</a>|Repository:<a href="https://github.com/40823131/cd2021">40823131</a></p>
<p>40823112|Website:<a href="https://a40823112.github.io/cd2021">a40823112</a>|Repository:<a href="https://github.com/a40823112/cd2021">a40823112</a></p>
<p>40823123|Website:<a href="https://40823123.github.io/cd2021">40823123</a>|Repository:<a href="https://github.com/40823123/cd2021">40823123</a></p>
<p>40823145|Website:<a href="https://40823145.github.io/cd2021">40823145</a>|Repository:<a href="https://github.com/40823145/cd2021">40823145</a></p>
<p>40823136|Website:<a href="https://40823136.github.io/cd2021">40823136</a>|Repository:<a href="https://github.com/40823136/cd2021">40823136</a></p>
<p>40823109|Website:<a href="https://40823109.github.io/cd2021">40823109</a>|Repository:<a href="https://github.com/40823109/cd2021">40823109</a></p>
<p>40823116|Website:<a href="https://40823116.github.io/cd2021">40823116</a>|Repository:<a href="https://github.com/40823116/cd2021">40823116</a></p>
<p>40823108|Website:<a href="https://40823108.github.io/cd2021">40823108</a>|Repository:<a href="https://github.com/40823108/cd2021">40823108</a></p>
<p>stage3_ag2|  <a href="https://40823151.github.io/stage3-ag2">網站</a>   <a href="https://github.com/40823151/stage3-ag2">倉儲</a></p>
<p>40823151|Website:<a href="https://40823151.github.io/cd2021">40823151</a>|Repository:<a href="https://github.com/40823151/cd2021">40823151</a></p>
<p>40623121|Website:<a href="https://40623121.github.io/cd2021">40623121</a>|Repository:<a href="https://github.com/40623121/cd2021">40623121</a></p>
<p>40871106|Website:<a href="https://40871106.github.io/cd2021">40871106</a>|Repository:<a href="https://github.com/40871106/cd2021">40871106</a></p>
<p>40823102|Website:<a href="https://40823102.github.io/cd2021">40823102</a>|Repository:<a href="https://github.com/40823102/cd2021">40823102</a></p>
<p>40823104|Website:<a href="https://40823104.github.io/cd2021">40823104</a>|Repository:<a href="https://github.com/40823104/cd2021">40823104</a></p>
<p>40823106|Website:<a href="https://40823106.github.io/cd2021">40823106</a>|Repository:<a href="https://github.com/40823106/cd2021">40823106</a></p>
<p>40823101|Website:<a href="https://40823101.github.io/cd2021">40823101</a>|Repository:<a href="https://github.com/40823101/cd2021">40823101</a></p>
<p>40823132|Website:<a href="https://40823132.github.io/cd2021">40823132</a>|Repository:<a href="https://github.com/40823132/cd2021">40823132</a></p>
<p>stage3_ag3|  <a href="https://40823119.github.io/stage3-ag3">網站</a>  <a href="https://github.com/40823119/stage3-ag3">倉儲</a></p>
<p>40823119|Website:<a href="https://40823119.github.io/cd2021">40823119</a>|Repository:<a href="https://github.com/40823119/cd2021">40823119</a></p>
<p>40823150|Website:<a href="https://40823150.github.io/cd2021">40823150</a>|Repository:<a href="https://github.com/40823150/cd2021">40823150</a></p>
<p>40823103|Website:<a href="https://40823103.github.io/cd2021">40823103</a>|Repository:<a href="https://github.com/40823103/cd2021">40823103</a></p>
<p>40823107|Website:<a href="https://40823107.github.io/cd2021">40823107</a>|Repository:<a href="https://github.com/40823107/cd2021">40823107</a></p>
<p>40523252|Website:<a href="https://40523252.github.io/cd2021">40523252</a>|Repository:<a href="https://github.com/40523252/cd2021">40523252</a></p>
<p>40823154|Website:<a href="https://40823154.github.io/cd2021">40823154</a>|Repository:<a href="https://github.com/40823154/cd2021">40823154</a></p>
<p>|Website:<a href="https://.github.io/cd2021"></a>|Repository:<a href="https://github.com//cd2021"></a></p>
<p>|Website:<a href="https://.github.io/cd2021"></a>|Repository:<a href="https://github.com//cd2021"></a></p>
<p>stage3_ag4  <a href="https://40823142.github.io/stage3-ag4">網站</a>  <a href="https://github.com/40823142/stage3-ag4">倉儲</a></p>
<p>40823142|Website:<a href="https://40823142.github.io/cd2021">40823142</a>|Repository:<a href="https://github.com/40823142/cd2021">40823142</a></p>
<p>40823144|Website:<a href="https://40823144.github.io/cd2021">40823144</a>|Repository:<a href="https://github.com/40823144/cd2021">40823144</a></p>
<p>40823127|Website:<a href="https://40823127.github.io/cd2021">40823127</a>|Repository:<a href="https://github.com/40823127/cd2021">40823127</a></p>
<p>40823148|Website:<a href="https://40823148.github.io/cd2021">40823148</a>|Repository:<a href="https://github.com/40823148/cd2021">40823148</a></p>
<p>40823121|Website:<a href="https://40823121.github.io/cd2021">40823121</a>|Repository:<a href="https://github.com/40823121/cd2021">40823121</a></p>
<p>40823135|Website:<a href="https://40823135.github.io/cd2021">40823135</a>|Repository:<a href="https://github.com/40823135/cd2021">40823135</a></p>
<p>40823114|Website:<a href="https://40823114.github.io/cd2021">40823114</a>|Repository:<a href="https://github.com/40823114/cd2021">40823114</a></p>
<p>40823146|Website:<a href="https://40823146.github.io/cd2021">40823146</a>|Repository:<a href="https://github.com/40823146/cd2021">40823146</a></p>
<p>stage3_ag5  <a href="https://40823111.github.io/stage3-ag5">網站</a>  <a href="https://github.com/40823111/stage3-ag5">倉儲</a></p>
<p>40823111|Website:<a href="https://40823111.github.io/cd2021">40823111</a>|Repository:<a href="https://github.com/40823111/cd2021">40823111</a></p>
<p>40823115|Website:<a href="https://40823115.github.io/cd2021">40823115</a>|Repository:<a href="https://github.com/40823115/cd2021">40823115</a></p>
<p>40823128|Website:<a href="https://40823128.github.io/cd2021">40823128</a>|Repository:<a href="https://github.com/40823128/cd2021">40823128</a></p>
<p>40823120|Website:<a href="https://40823120.github.io/cd2021">40823120</a>|Repository:<a href="https://github.com/40823120/cd2021">40823120</a></p>
<p>40823140|Website:<a href="https://40823140.github.io/cd2021">40823140</a>|Repository:<a href="https://github.com/40823140/cd2021">40823140</a></p>
<p>40823124|Website:<a href="https://40823124.github.io/cd2021">40823124</a>|Repository:<a href="https://github.com/40823124/cd2021">40823124</a></p>
<p>40823139|Website:<a href="https://40823139.github.io/cd2021">40823139</a>|Repository:<a href="https://github.com/40823139/cd2021">40823139</a></p>
<p>40823126|Website:<a href="https://40823126.github.io/cd2021">40823126</a>|Repository:<a href="https://github.com/40823126/cd2021">40823126</a></p>
<p>stage3_ag6  <a href="https://40823152.github.io/stage3-ag6">網站</a>  <a href="https://github.com/40823152/stage3-ag6">倉儲</a></p>
<p>40823152|Website:<a href="https://40823152.github.io/cd2021">40823152</a>|Repository:<a href="https://github.com/40823152/cd2021">40823152</a></p>
<p>40823110|Website:<a href="https://40823110.github.io/cd2021">40823110</a>|Repository:<a href="https://github.com/40823110/cd2021">40823110</a></p>
<p>40823122|Website:<a href="https://4823122.github.io/cd2021">4823122</a>|Repository:<a href="https://github.com/4823122/cd2021">4823122</a></p>
<p>40823125|Website:<a href="https://40823125.github.io/cd2021">40823125</a>|Repository:<a href="https://github.com/40823125/cd2021">40823125</a></p>
<p>40823117|Website:<a href="https://40823117.github.io/cd2021">40823117</a>|Repository:<a href="https://github.com/40823117/cd2021">40823117</a></p>
<p>40823129|Website:<a href="https://40823129.github.io/cd2021">40823129</a>|Repository:<a href="https://github.com/40823129/cd2021">40823129</a></p>
<p>40823149|Website:<a href="https://40823149.github.io/cd2021">40823149</a>|Repository:<a href="https://github.com/40823149/cd2021">40823149</a></p>
<p>40823153|Website:<a href="https://40823153.github.io/cd2021">40823153</a>|Repository:<a href="https://github.com/40823153/cd2021">40823153</a></p>
<h2>task2</h2>
<p></p>
<h2>task3</h2>
<h1>W13-W14</h1>
<h4>RoboDK 機械手臂</h4>
<p>1.開啟老師提供的pick_and_place檔案和 robodk程式</p>
<p><img alt="" height="59" src="/images/r1.png" width="700"/></p>
<p></p>
<p>2.進入到程式後打開資料</p>
<p><img alt="" height="363" src="/images/r2.png" width="700"/></p>
<p></p>
<p><img alt="" height="579" src="/images/r3.png" width="700"/></p>
<p>3.找到pick_and_place資料夾的範例</p>
<p><img alt="" height="431" src="/images/r4.png" width="700"/></p>
<p>4.導入</p>
<p><img alt="" height="366" src="/images/r5.png" width="700"/></p>
<p>5.找到程式檔案</p>
<p><img alt="" height="516" src="/images/r6.png" width="700"/></p>
<p>6.放到小白框裡</p>
<p><img alt="" height="803" src="/images/r7.png" width="700"/></p>
<p>7.然後在這裡輸入</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">pip install robodk</pre>
<p><img alt="" height="219" src="/images/r8.png" width="700"/></p>
<p>8.然後再把robodk_ip 改成127.0.0.1</p>
<p><img alt="" height="803" src="/images/r9.png" width="700"/></p>
<p></p>
<p>9.完成<img alt="" height="533" src="/images/r10.png" width="700"/></p>
<p></p>
<h1>W15</h1>
<h2>Inverse kinematics for a 2-joint robot arm using geometry 翻譯</h2>
<p style="text-align: center;"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">Inverse kinematics for a 2-joint robot arm using geometry</yt-formatted-string></p>
<p style="text-align: center;"><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/IKOGwoJ2HLk" title="YouTube video player" width="560"></iframe></p>
<p>We saw this simple two-link robot in the previous lecture about forward kinematics.</p>
<p></p>
<p>我們在之前看到了簡單的雙連桿機械手臂關於正向運動學的課程。</p>
<p>The tooltip pose of this robot is described simply by two numbers, the coordinates x and y with respect to the world coordinate frame.</p>
<p>描述了這個機器人的工具提示動作簡單地由兩個數字，坐標 x 和y 相對於世界坐標系。</p>
<p></p>
<p>So, the problem here is that given x and y,<br/>we want to determine the joined angles, Q1</p>
<p>and Q2.</p>
<p>所以，這裡的問題是，給定 x 和 y，<br/>我們要確定連接的角度 Q1</p>
<p>和 Q2。</p>
<p></p>
<p>The solution that we’re going to follow<br/>in this particular section is a geometric</p>
<p>one.</p>
<p>我們將在本節中遵循的解決方案是幾何解決方案。</p>
<p></p>
<p>We’re going to start with a simple piece of construction.</p>
<p>我們將從一個簡單的結構開始。</p>
<p></p>
<p>We’re going to overlay the red triangle<br/>on top of our robot.</p>
<p>我們將在機器人頂部覆蓋紅色三角形。</p>
<p>We know that the end point coordinate is x,<br/>y, so the vertical height of the triangle</p>
<p>is y, the horizontal width is x.</p>
<p>我們知道終點坐標是x，y，所以三角形的垂直高度是y，水平寬度是x。</p>
<p>And, using Pythagoras theorem, we can write<br/>r squared equals x squared plus y squared.</p>
<p>So far, so easy.</p>
<p>並且，使用畢達哥拉斯定理，我們可以寫出 r 平方等於 x 平方加上 y 平方。<br/>到目前為止，很容易。</p>
<p>Now, we’re going to look at this triangle<br/>highlighted here in red and we want to determine</p>
<p>the angle alpha.</p>
<p>現在，我們將查看此處以紅色突出顯示的三角形，我們要確定角度 alpha。</p>
<p>In order to do that, we need to use the cosine<br/>rule.</p>
<p>為了做到這一點，我們需要使用餘弦規則。</p>
<p>And, if you’re a little rusty on the cosine rule, here is a bit of a refresher.</p>
<p>而且，如果你對余弦規則有點生疏，這裡有一點複習。</p>
<p>We have an arbitrary triangle.</p>
<p>我們有一個任意三角形。</p>
<p>We don’t have to have any right angles in it and we’re going to label the length of this edge as A and the angle opposite that edge, we’re going to label as little a.</p>
<p>我們不必在其中有任何直角，我們將這條邊的長度標記為 A，而與該邊相對的角度，我們將標記為小 a。</p>
<p></p>
<p>And, we do the same for this edge and this angle, and this edge and this angle.</p>
<p>並且，我們對這條邊和這個角，以及這條邊和這個角做同樣的事情。</p>
<p></p>
<p>So, all together, the sides are labelled capitals<br/>A, B and C, and the angles are labelled little</p>
<p>a, little b, and little c.</p>
<p>因此，所有邊都標記為大寫字母 A、B 和 C，角標記為小 a、小 b 和小 c。</p>
<p></p>
<p>So, the cosine rule is simply this relationship here.</p>
<p>所以，餘弦規則就是這裡的這種關係。</p>
<p></p>
<p>It’s a bit like Pythagoras’ theorem except for this extra term on the end with the cos a in it.</p>
<p>它有點像畢達哥拉斯的定理，除了末尾有 cos a 的這個額外項。</p>
<p></p>
<p>Now, let’s apply the cosine rule to the<br/>particular triangle we looked at a moment</p>
<p>ago.</p>
<p>現在，讓我們將餘弦規則應用於我們剛才看到的特定三角形。</p>
<p></p>
<p>It’s pretty straightforward to write down<br/>this particular relationship.</p>
<p>寫下這種特殊關係非常簡單。</p>
<p></p>
<p>We can isolate the term cos alpha which gives us the angle alpha that we’re interested in.</p>
<p>我們可以分離出術語 cos alpha，它給出了我們感興趣的角度 alpha。</p>
<p></p>
<p>And, it’s defined in terms of the constant link lengths, A1 and A2 and the position of the end effector, x and y.</p>
<p>而且，它是根據恆定連桿長度 A1 和 A2 以及末端執行器的位置 x 和 y 定義的。</p>
<p></p>
<p>We can write this simple relationship between the angles alpha and Q2.</p>
<p>我們可以寫出角度 alpha 和 Q2 之間的這種簡單關係。</p>
<p></p>
<p>And, we know from the shape of the cosine function that cos of Q2 must be equal to negative of cos alpha.</p>
<p>而且，我們從餘弦函數的形狀知道，Q2 的 cos 必須等於 cos alpha 的負值。</p>
<p></p>
<p>This time, let’s just write an expression for the cosine of the joined angle Q2.</p>
<p>這一次，讓我們為連接角 Q2 的餘弦寫一個表達式。</p>
<p></p>
<p>Now, we’re going to draw yet another red triangle and we’re going apply some simple trigonometry here.</p>
<p>現在，我們將繪製另一個紅色三角形，並在此處應用一些簡單的三角函數。</p>
<p></p>
<p>If we know Q2, then we know this length and this length of the red triangle.</p>
<p>如果我們知道 Q2，那麼我們就知道這個長度和這個紅色三角形的長度。</p>
<p></p>
<p>We can write this relationship for the sine of the joined angle Q2.</p>
<p>我們可以為連接角 Q2 的正弦寫出這種關係。</p>
<p></p>
<p>Now, we can consider this bigger triangle whose angle is beta and this side length of the triangle is given here in blue.</p>
<p>現在，我們可以考慮這個更大的三角形，它的角是β，三角形的這條邊長在這裡用藍色給出。</p>
<p></p>
<p>And, the length of the other side of the triangle is this.</p>
<p>並且，三角形另一邊的長度是這個。</p>
<p></p>
<p>So, now we can write an expression for the angle beta in terms of these parameters here.</p>
<p>所以，現在我們可以在此處根據這些參數編寫角度 beta 的表達式。</p>
<p></p>
<p>Going back to the red triangle that we drew earlier, we can establish a relationship between Q1 and the angle beta.</p>
<p>回到我們之前畫的紅色三角形，我們可以建立Q1和角度β之間的關係。</p>
<p></p>
<p>Introduce yet another angle, this one gamma and we can write a relationship between the angle gamma and the tooltip coordinates x and y.</p>
<p>引入另一個角度，這個伽馬，我們可以寫出角度伽馬和工具提示坐標 x 和 y 之間的關係。</p>
<p></p>
<p>Now, we can write a simple relationship between the angles that we’ve constructed, gamma and beta and the joined angle we’re interested<br/>in which is Q1.</p>
<p>現在，我們可以在我們構建的角度、gamma 和 beta 以及我們感興趣的連接角度之間寫出一個簡單的關係其中是 Q1。</p>
<p></p>
<p></p>
<p>And, the total relationship looks something like this.</p>
<p>而且，整個關係看起來像這樣。</p>
<p></p>
<p>Quite a complex relationship, it gives us the angle of joined one, that’s Q1 in terms of the end effector coordinates y and x, and a bunch of constants, a1 and a2, and it’s also a function of the second joint angle, Q2.</p>
<p>相當複雜的關係，它為我們提供了連接的角度，即末端執行器坐標 y 和 x 的 Q1，以及一系列常量 a1 和 a2，它也是第二個關節角度 Q2 的函數。</p>
<p></p>
<p>So, let’s summarize what it is that we have derived here.</p>
<p>所以，讓我們總結一下我們在這裡得出的結論。</p>
<p></p>
<p>We have an expression for the cosine of Q2 and we have an expression for Q1.</p>
<p>我們有 Q2 的餘弦表達式和 Q1 的表達式。</p>
<p></p>
<p>Now, the cosine function is symmetrical about 0.</p>
<p>現在，餘弦函數關於 0 對稱。</p>
<p></p>
<p>So, if we know the value of the cosine of Q2, then there are two possible solutions, a positive angle and a negative angle.</p>
<p>所以，如果我們知道 Q2 的餘弦值，那麼有兩種可能的解，一個正角和一個負角。</p>
<p></p>
<p>We’re going to explicitly choose the positive angle, which means that I can write this expression here.</p>
<p>我們將明確選擇正角，這意味著我可以在這裡寫這個表達式。</p>
<p></p>
<p>And now, we have what we call the inverse kinematic solution for this two-link robot.</p>
<p>現在，我們有了這個雙連桿機器人的逆運動學解決方案。</p>
<p></p>
<p>We have an expression for the two joined angles, Q1 and Q2 in terms of the end effector pose x and y, and a bunch of constants.</p>
<p>我們有兩個連接角 Q1 和 Q2 的表達式，根據末端執行器姿勢 x 和 y 以及一系列常數。</p>
<p></p>
<p>You notice that the two equations are not independent.</p>
<p>你注意到這兩個方程不是獨立的。</p>
<p></p>
<p>The equation for Q1, in fact, depends on the solution for Q2.</p>
<p>事實上，Q1 的方程取決於 Q2 的解。</p>
<p></p>
<p>In this case, Q2 is negative and we’re going to write the solution for Q2 with a negative sign in front of the inverse cosine.</p>
<p>在這種情況下，Q2 是負數，我們將在反餘弦前用負號編寫 Q2 的解。</p>
<p></p>
<p>Now, we need to solve for Q1, so we’re going to introduce this particular red triangle,</p>
<p>現在，我們需要求解 Q1，所以我們將介紹這個特殊的紅色三角形，</p>
<p></p>
<p>the angle beta that we solved previously, and the angle gamma which is defined in terms of y and x.</p>
<p>我們之前求解的角度 beta，以及根據 y 和 x 定義的角度 gamma。</p>
<p></p>
<p>Now, we write a slightly different relationship between Q1, gamma and beta, different to what we had before.</p>
<p>現在，我們在 Q1、gamma 和 beta 之間寫出略有不同的關係，與我們之前的關係不同。</p>
<p></p>
<p>There’s a change of sign involved.</p>
<p>涉及到符號的變化。</p>
<p></p>
<p>Then, we can substitute all that previous equation and come up with this expression for Q1.</p>
<p>然後，我們可以替換之前的所有等式並得出 Q1 的這個表達式。</p>
<p></p>
<p>Again, there is a change of sign here. Previously, this was a negative sign.</p>
<p>同樣，這裡的符號發生了變化。 以前，這是一個負面信號。</p>
<p></p>
<p>And, here in summary form is the solution for the inverse kinematics of our two-link robot when it is in this particular configuration, where Q2 is negative.</p>
<p>並且，這裡總結性地給出了我們的雙連桿機器人在這種特定配置下的逆向運動學的解決方案，其中 Q2 為負。</p>
<p></p>
<p>Let’s compare the two solutions, the case where Q2 is positive and the case where Q2 is negative.</p>
<p>讓我們比較兩種解決方案，Q2 為正的情況和 Q2 為負的情況。</p>
<p></p>
<h2>Inverse kinematics for a 2-joint robot arm using algebra 翻譯</h2>
<p style="text-align: center;"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">Inverse kinematics for a 2-joint robot arm using algebra</yt-formatted-string></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/eIZuz1XCd0w" title="YouTube video player" width="560"></iframe></p>
<p>Here we have the same two link robot as we just looked at but this time we're going to solve it using an analytical approach, that is we're going to rely much more on algebra,</p>
<p>在這裡，我們有與剛才看到的相同的兩個鏈接機器人，但這次我們將使用分析方法來解決它，也就是說，我們將更多地依賴代數，</p>
<p></p>
<p>particular linear algebra rather than geometry.</p>
<p>特定的線性代數而不是幾何。</p>
<p>We have an expression E, which is the homogeneous transformation which represents the pose of the robots endefector and we looked at this in the last lecture, we can write the endefector pose as a sequence of elementary homogeneous transformations.</p>
<p>我們有一個表達式 E，它是表示機器人 endefector 位姿的齊次變換，我們在上一課中看過這個，我們可以將 endefector 位姿寫為一系列基本齊次變換。</p>
<p>A rotation by Q1, a translation along the X direction by A1,</p>
<p>Q1 的旋轉，A1 沿 X 方向的平移，</p>
<p>a rotation by Q2 and then a translation in the X direction<br/>by A2.</p>
<p>旋轉 Q2，然後沿 X 方向平移通過 A2。</p>
<p>If I expand this out, multiply all the transformations together, I get the expression shown here; a three by three homogeneous transformation</p>
<p>matrix representing the pose of the robot's endefector.</p>
<p></p>
<p>如果我將其展開，將所有變換相乘，就會得到此處所示的表達式； 三乘三同構變換</p>
<p>表示機器人尾端姿態的矩陣。</p>
<p></p>
<p>Now for this particular two link robot, we are only interested in the position of its endefector, it's X and Y co-ordinate and they are these two elements within the homogeneous transformation matrix,</p>
<p></p>
<p>現在對於這個特殊的雙連桿機器人，我們只對它的末端位置感興趣，它是 X 和 Y 坐標，它們是齊次變換矩陣中的這兩個元素，</p>
<p></p>
<p>so I'm going to copy those out. So here again is our expression for X and Y and what we're going to do is a fairly common trick, we're going to square and add these two equations and I get a relationship that looks like this.</p>
<p></p>
<p>所以我要把這些複製出來。 所以這裡又是我們對 X 和 Y 的表達式，我們要做的是一個相當常見的技巧，我們要平方並添加這兩個方程，我得到一個看起來像這樣的關係。</p>
<p></p>
<p>Now I can solve for the joint angle Q2 in terms of the endefector<br/>pose X and Y and the robot's constants A1 and A2.</p>
<p>現在我可以根據 endefector 求解關節角度 Q2<br/>姿勢 X 和 Y 以及機器人的常數 A1 和 A2。</p>
<p></p>
<p>Now what I'm going to do is apply the sum of angles identity. I'm going to expand these terms,</p>
<p>現在我要做的是應用角度恆等式。 我將擴展這些術語，</p>
<p></p>
<p>sine of Q1 plus Q2 or cos of Q1 plus Q2 and to make life a little bit easier,</p>
<p>Q1 的正弦加 Q2 或 Q1 的 cos 加 Q2 並使式子簡單，</p>
<p></p>
<p>I'm going to make some substations, so where ever I had cos Q2, I'm going to write C2 and where ever I had sine Q2,</p>
<p>我打算做一些變電站，所以只要有 cos Q2，我就會寫 C2，只要有正弦 Q2，</p>
<p></p>
<p></p>
<p>I’m going to write S2. It's a fairly common shorthand when people are looking at robot kinematic equations.</p>
<p>我要寫S2。 當人們查看機器人運動學方程時，這是一個相當常見的速記。</p>
<p></p>
<p><br/>And here are the equations after making those substitutions. Looking at these two equations,</p>
<p>這是進行這些替換後的方程式。 看這兩個方程，</p>
<p></p>
<p><br/>I can see that they fall into a very well known form and for that form there is a very well known solution.</p>
<p>我可以看到它們屬於一種眾所周知的形式，對於這種形式，有一個眾所周知的解決方案。</p>
<p></p>
<p>So I'm going to consider just one of the equations, the equation for Y and using our well known identity and it's solution, I can determine the values for the<br/>variables little a,</p>
<p></p>
<p>所以我將只考慮其中一個方程，即 Y 的方程，並使用我們眾所周知的恆等式及其解，我可以確定變量小a，</p>
<p></p>
<p>little b and little c and once I've determined those, then I can<br/>just write down the solution for Q1, which is the equivalent of theta in this particular case.</p>
<p>小 b 和小 c，一旦我確定了它們，我就可以<br/>只需寫下 Q1 的解決方案，在這種特殊情況下，它相當於 theta。</p>
<p></p>
<p></p>
<p></p>
<p>Here again is our expression for Q1, copied over from the previous slide and we may remember from earlier in our workings that we determined this particular relationship;</p>
<p>這裡再次是我們對 Q1 的表達，從上一張幻燈片複製過來，我們可能還記得在我們工作的早期，我們確定了這種特殊關係；</p>
<p></p>
<p></p>
<p>X squared plus Y squared is equal to this particular complex expression.</p>
<p>X 平方加 Y 平方等於這個特定的複雜表達式。</p>
<p></p>
<p></p>
<p>So I can substitute that in and do some simplification and I end up with this<br/>slightly less complex expression for Q1.</p>
<p></p>
<p>因此，我可以將其替換並進行一些簡化，最終得到 Q1 的這個稍微不那麼複雜的表達式。</p>
<p></p>
<p>And it is the same expression that I got following the geometric approach in the previous section.</p>
<p></p>
<p>這與我在上一節中遵循幾何方法得到的表達式相同。</p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p><h1>W16</h1>
<p></p>
<h4>MTB_robot 的取放方塊流程規劃 (Process Planning):</h4>
<h4>1. Onshape 零組件繪製 (20%)</h4>
<p>零組件必須在<span> </span><a href="https://www.onshape.com/">Onshape</a><span> </span>繪圖, 並提供可公開分享之零組件連結於頁面及回報區中.</p>
<h4>2. 建立 CoppeliaSim 4.1.0 MTB robot 場景 (20%)</h4>
<p>請以自行繪製之零件輸入 CoppeliaSim 後, 組合為 MTB robot 模型, 並利用 Leo Editor 以 require 導入 Lua 程式運作, 分別控制各軸轉動示範, 所完成的所有檔案請存入 W16_exam 後壓縮為 W16_exam.7z 後送至個人 @gm 帳號下的 Google Drive 後將連結設為任何人皆可下載, 並將連結與操作嵌入影片放在 W16 頁面與回報區中 .</p>
<h4>3. 手臂末端加入 components-gripper-suction pad 吸盤 (20%)</h4>
<p>請接續上述 MTB robot, 在其末端接上 force sensor 後接上標準 suction pad 後, 分別導入 W15 週線上課程之鍵盤控制程式後, 拍攝影片示範 W15 線上課程中之操作與示範過程.</p>
<h4>4. 逆向運動學函式 (20%)</h4>
<p>請根據 W15 線上課程內容之 Inverse Kinematics 方程式 (<a href="https://www.youtube.com/watch?v=IKOGwoJ2HLk&amp;t=35s">影片1</a><span> </span>或<a href="https://www.youtube.com/watch?v=eIZuz1XCd0w&amp;t=183s">影片2</a>), 以程式指定方塊取放之兩個位置 - (0.2, 0.7, 0.05) 與 (-0.3, -0.55, 0.05), 以前述 Leo Editor Lua 程式編寫方法, 分別採鍵盤控制與程式迴圈方式執行 W15 兩個指定位置之方塊取放.</p>
<h4>5. Python remote API 逆向運動學函式 (20%)</h4>
<p>請利用 Python remote API 程式重現以迴圈方式執行 W15 兩個指定位置之方塊取放.</p>