<h1>About</h1>
<p>40523252 王彥筑</p>
<p>倉儲：<a href="https://github.com/40523252/cd2021">https://github.com/40523252/cd2021</a></p>
<p>網站：<a href="https://40523252.github.io/cd2021/content/index.html">https://40523252.github.io/cd2021/content/index.html</a></p>
<p><span>Stage1分組倉儲：<a href="https://github.com/40523252/stage1-ag2">https://github.com/40523252/stage1-ag2</a></span></p>
<p>Stage1分組網頁：<a href="https://40623121.github.io/stage1-ag2/content/index.html">https://40623121.github.io/stage1-ag2/content/index.html</a></p>
<p>Stage2分組倉儲：<a href="https://github.com/40523252/stage2-ag8">https://github.com/40523252/stage2-ag8</a></p>
<p>Stage2分組網頁：<a href="https://40823154.github.io/stage2-ag8/content/index.html">https://40823154.github.io/stage2-ag8/content/index.html</a></p>
<p></p>
<p></p>
<h1>建立網站</h1>
<p>建立個人倉儲</p>
<ol>
<li>下載老師提供的<a href="https://drive.google.com/file/d/1R6vAAWdNDigmyvFFQTKyM-XNKOWeCFJU/view"> kmol2021_spring_v2.7z</a></li>
<li>在cmd中輸入自己的<span style="color: #993300;">user name</span> 和 <span style="color: #993300;">suer email</span></li>
<li><span color="#993300" style="color: #000000; background-color: #ffffff;">進入此<a href="https://github.com/mdecourse/cmstemplate">網址</a></span>
<p><img alt="" height="322" src="/images/網站1.png" width="600"/></p>
<span color="#993300" style="color: #000000; background-color: #ffffff;"><img alt="" height="322" src="/images/網站2.png" width="600"/></span></li>
<li>在cmd上面輸入 (網址的部分是自己倉儲的網址) 
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">git clone --recurse-submodules 網址</pre>
<p>例如：</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">git clone --recuse-submodules https://github.com/40523252/cd2021.git</pre>
</li>
<li>在網站工具列的Sittings會找到<strong>Github pages</strong>
<h6 class="Subhead-heading">把設定設成跟以下圖片一樣建設網頁就可以取得進入網站的網址</h6>
<img alt="" height="322" src="/images/網站3.png" width="600"/></li>
<li>
<h6 class="Subhead-heading"></h6>
<img alt="" height="322" src="/images/網站4.png" width="600"/><br/> </li>
</ol>
<h1>SSH流程</h1>
<p>使用SSH是為了簡化把更新的檔案推送到倉儲的流程</p>
<p></p>
<p>1.先在cmd裡輸入sh</p>
<p><img alt="" height="313" src="/images/SHH 1.png" width="600"/></p>
<p></p>
<p>2.再按Enter 直到出現以下視窗 <span style="color: #993300;">底下的路徑是SSH檔案所在位置</span></p>
<p><img alt="" height="313" src="/images/SSh 2.png" width="600"/></p>
<p></p>
<p>3.找到SSH檔案把id_rsa.pub 放入Scite裡</p>
<p><img alt="" height="336" src="/images/SSH4.png" width="600"/></p>
<p></p>
<p>4.再進入github網頁 找到Setting 的 <span style="color: #993300;">SSH and GPG keys<span style="color: #000000;"> 按下</span>New SSH key</span></p>
<p><img alt="" height="322" src="/images/SSH5.png" width="600"/></p>
<p></p>
<p>5.在Title 打上學號 底下文字就複製剛剛放到Scite 裡的一串代碼</p>
<p><img alt="" height="322" src="/images/SSH6.png" width="600"/></p>
<p></p>
<p>6.到putty 在 Host Name 和 Save Sessions 輸入 <span style="color: #993300;">github.com </span><img alt="" height="542" src="/images/SSH7.png" width="601"/></p>
<p></p>
<p>7.路徑選擇ppk鑰匙檔案</p>
<p><img alt="" height="542" src="/images/SSH8.png" width="601"/></p>
<p></p>
<p>8.把Start.bat 放入Scite 並進行跟改 </p>
<p>   寫入</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">set GIT_HOME=%Disk%:\portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe</pre>
<p><img alt="" height="783" src="/images/SSH9.png" width="600"/></p>
<p></p>
<p>9.再到倉儲資料夾裡的<span style="color: #993300;">.git (隱藏資料夾) <span style="color: #000000;">選擇Config 放入Scite 進行編輯</span></span></p>
<p></p>
<p><img alt="" height="450" src="/images/SSH10.png" width="600"/></p>
<p></p>
<p>10.輸入 url=git@github.com:學號/倉儲名稱.git</p>
<p>     並且把上面一行註解掉</p>
<p><img alt="" height="643" src="/images/SSH11.png" width="600"/></p>
<p></p>
<p>11.SSH即可完成</p>
<h1>四人分組W5-W8</h1>
<p><span> </span><a href="http://github.com/40523252/cd2021">40523252 repo</a><span> | </span><a href="http://40523252.github.io/cd2021">40523252 site</a><span> 王彥筑</span></p>
<p><span><span> <a href="http://github.com/40823154/cd2021">40823154 repo</a><span><span> </span>|<span> </span></span><a href="http://40823154.github.io/cd2021">40823154 site</a> 張宸嘉</span></span></p>
<p><span><span> <a href="http://github.com/40823103/cd2021">40823103 repo</a><span><span> </span>|<span> </span></span><a href="http://40823103.github.io/cd2021">40823103 site</a><span><span> 呂霈瑜</span></span></span></span></p>
<p><span><span><span><span> <a href="http://github.com/40823107/cd2021">40823107 repo</a><span><span> </span>|<span> </span></span><a href="http://40823107.github.io/cd2021">40823107 site</a> 吳嘉欣</span></span></span></span></p>
<h2>分配工作</h2>
<table style="width: 281.539px;">
<tbody>
<tr style="height: 30px;">
<td style="width: 116px; height: 30px; text-align: center;">繪製零件圖</td>
<td style="width: 150.539px; height: 30px; text-align: center;">40823103  呂霈瑜</td>
</tr>
<tr style="height: 21.973px;">
<td style="width: 116px; height: 21.973px; text-align: center;">模擬</td>
<td style="width: 150.539px; height: 21.973px; text-align: center;">40823107  吳嘉欣</td>
</tr>
<tr style="height: 20px;">
<td style="width: 116px; height: 20px; text-align: center;">編輯小組網頁</td>
<td style="width: 150.539px; height: 20px; text-align: center;">40523252  王彥筑</td>
</tr>
<tr style="height: 24px;">
<td style="width: 116px; height: 24px; text-align: center;">DPF製作</td>
<td style="width: 150.539px; height: 24px; text-align: center;">40823154  張宸嘉</td>
</tr>
</tbody>
</table>
<h2>討論主題</h2>
<p><span><span><span><span>Pegasus Automata</span></span></span></span></p>
<p><span><span><span><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8QzeYpuuhjw" width="560"></iframe></span></span></span></span></p>
<h2>模擬機構</h2>
<p>Solidworks模擬</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/NVVsvlLOesE" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>第一次組裝時不是很熟悉 雖然看起來組裝好了沒問題 </p>
<p>但是運轉起來還是沒有成功 也卡卡的不太順</p>
<p>沒有定義好</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/J2XMdp67vhA" title="YouTube video player" width="560"></iframe></p>
<p><span><span><span><span>第二次模擬 零件不能運轉 應該是轉速不夠</span></span></span></span></p>
<p><span><span><span><span>也有可能是扭距不夠</span></span></span></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/zpGdLqk_q4I" title="YouTube video player" width="560"></iframe></p>
<p><span><span><span><span></span></span></span></span></p>
<p><span><span><span><span>第三次模擬也是 後來發現齒輪們有對齊到</span></span></span></span></p>
<p><span><span><span><span>所以重新繼續定義這些零件</span></span></span></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/pz5mESoG0lE" title="YouTube video player" width="560"></iframe></p>
<p><span><span><span><span></span></span></span></span></p>
<p>第四次模擬有比之前好很多 有讓齒輪互相對齊</p>
<p>所以一開始零件可以順利運轉 但是最後還是有問題 </p>
<p>所以沒辦法順利轉動<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/j_NWZqjXt6w" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p></p>
<h2>RoboDK的操作流程</h2>
<p></p>
<h1>TASK</h1>
<p></p>
<h2>task1</h2>
<pre class="brush:py;auto-links:false;toolbar:false;tab-size:6" contenteditable="false">with open("stage3_2a.txt") as a:   #開啟Stage3_2a.txt檔案 令他為a
    data = a.readlines()  #data=讀a檔案裡的資料
    print(data) #列出data讀到的文字
for i in range(len(data)):  # 將範圍(range)訂在data讀到的len(有6個)裡就不會出現list index out of range的問題 得到的元素放入i 再讓i做迴圈
    group = data[i].rstrip("\n").split("\t") #讀取data的第"i"個 把\n刪除讓他不會自動換行 在加上\t 新增空格
    print('&lt;p&gt;'+group[0]+'|&lt;a href="https://'+group[1]+'.github.io/stage3-ag'+group[0][9]+'"&gt;網站&lt;/a&gt;|&lt;a href="https://github.com/'+group[2]+'/stage3-ag'+group[0][9]+'"&gt;倉儲&lt;/a&gt;&lt;/p&gt;')
    #列出list 中的內容再加入html的格式 和個人網址
 
 
    for j in range(2,18,2): #對j做迴圈把範圍定在2~18 每次跳兩個
        try:
            print('&lt;p&gt;'+group[j]+'|Website:'+'&lt;a href="https://'+group[j]+'.github.io/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;'+'|Repository:'+'&lt;a href="https://github.com/'+group[j]+'/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;&lt;/p&gt;')   #跟上面一樣列出倉儲網址
        except:
            continue  #繼續讓迴圈跑</pre>
<p style="text-align: center;"><br/>列出的成果如下</p>
<p></p>
<p>stage3_ag1|  <a href="https://40823131.github.io/stage3-ag1">網站</a>   <a href="https://github.com/40823131/stage3-ag1">倉儲</a></p>
<p>40823131|Website:<a href="https://40823131.github.io/cd2021">40823131</a>|Repository:<a href="https://github.com/40823131/cd2021">40823131</a></p>
<p>40823112|Website:<a href="https://a40823112.github.io/cd2021">a40823112</a>|Repository:<a href="https://github.com/a40823112/cd2021">a40823112</a></p>
<p>40823123|Website:<a href="https://40823123.github.io/cd2021">40823123</a>|Repository:<a href="https://github.com/40823123/cd2021">40823123</a></p>
<p>40823145|Website:<a href="https://40823145.github.io/cd2021">40823145</a>|Repository:<a href="https://github.com/40823145/cd2021">40823145</a></p>
<p>40823136|Website:<a href="https://40823136.github.io/cd2021">40823136</a>|Repository:<a href="https://github.com/40823136/cd2021">40823136</a></p>
<p>40823109|Website:<a href="https://40823109.github.io/cd2021">40823109</a>|Repository:<a href="https://github.com/40823109/cd2021">40823109</a></p>
<p>40823116|Website:<a href="https://40823116.github.io/cd2021">40823116</a>|Repository:<a href="https://github.com/40823116/cd2021">40823116</a></p>
<p>40823108|Website:<a href="https://40823108.github.io/cd2021">40823108</a>|Repository:<a href="https://github.com/40823108/cd2021">40823108</a></p>
<p>stage3_ag2|  <a href="https://40823151.github.io/stage3-ag2">網站</a>   <a href="https://github.com/40823151/stage3-ag2">倉儲</a></p>
<p>40823151|Website:<a href="https://40823151.github.io/cd2021">40823151</a>|Repository:<a href="https://github.com/40823151/cd2021">40823151</a></p>
<p>40623121|Website:<a href="https://40623121.github.io/cd2021">40623121</a>|Repository:<a href="https://github.com/40623121/cd2021">40623121</a></p>
<p>40871106|Website:<a href="https://40871106.github.io/cd2021">40871106</a>|Repository:<a href="https://github.com/40871106/cd2021">40871106</a></p>
<p>40823102|Website:<a href="https://40823102.github.io/cd2021">40823102</a>|Repository:<a href="https://github.com/40823102/cd2021">40823102</a></p>
<p>40823104|Website:<a href="https://40823104.github.io/cd2021">40823104</a>|Repository:<a href="https://github.com/40823104/cd2021">40823104</a></p>
<p>40823106|Website:<a href="https://40823106.github.io/cd2021">40823106</a>|Repository:<a href="https://github.com/40823106/cd2021">40823106</a></p>
<p>40823101|Website:<a href="https://40823101.github.io/cd2021">40823101</a>|Repository:<a href="https://github.com/40823101/cd2021">40823101</a></p>
<p>40823132|Website:<a href="https://40823132.github.io/cd2021">40823132</a>|Repository:<a href="https://github.com/40823132/cd2021">40823132</a></p>
<p>stage3_ag3|  <a href="https://40823119.github.io/stage3-ag3">網站</a>  <a href="https://github.com/40823119/stage3-ag3">倉儲</a></p>
<p>40823119|Website:<a href="https://40823119.github.io/cd2021">40823119</a>|Repository:<a href="https://github.com/40823119/cd2021">40823119</a></p>
<p>40823150|Website:<a href="https://40823150.github.io/cd2021">40823150</a>|Repository:<a href="https://github.com/40823150/cd2021">40823150</a></p>
<p>40823103|Website:<a href="https://40823103.github.io/cd2021">40823103</a>|Repository:<a href="https://github.com/40823103/cd2021">40823103</a></p>
<p>40823107|Website:<a href="https://40823107.github.io/cd2021">40823107</a>|Repository:<a href="https://github.com/40823107/cd2021">40823107</a></p>
<p>40523252|Website:<a href="https://40523252.github.io/cd2021">40523252</a>|Repository:<a href="https://github.com/40523252/cd2021">40523252</a></p>
<p>40823154|Website:<a href="https://40823154.github.io/cd2021">40823154</a>|Repository:<a href="https://github.com/40823154/cd2021">40823154</a></p>
<p>|Website:<a href="https://.github.io/cd2021"></a>|Repository:<a href="https://github.com//cd2021"></a></p>
<p>|Website:<a href="https://.github.io/cd2021"></a>|Repository:<a href="https://github.com//cd2021"></a></p>
<p>stage3_ag4  <a href="https://40823142.github.io/stage3-ag4">網站</a>  <a href="https://github.com/40823142/stage3-ag4">倉儲</a></p>
<p>40823142|Website:<a href="https://40823142.github.io/cd2021">40823142</a>|Repository:<a href="https://github.com/40823142/cd2021">40823142</a></p>
<p>40823144|Website:<a href="https://40823144.github.io/cd2021">40823144</a>|Repository:<a href="https://github.com/40823144/cd2021">40823144</a></p>
<p>40823127|Website:<a href="https://40823127.github.io/cd2021">40823127</a>|Repository:<a href="https://github.com/40823127/cd2021">40823127</a></p>
<p>40823148|Website:<a href="https://40823148.github.io/cd2021">40823148</a>|Repository:<a href="https://github.com/40823148/cd2021">40823148</a></p>
<p>40823121|Website:<a href="https://40823121.github.io/cd2021">40823121</a>|Repository:<a href="https://github.com/40823121/cd2021">40823121</a></p>
<p>40823135|Website:<a href="https://40823135.github.io/cd2021">40823135</a>|Repository:<a href="https://github.com/40823135/cd2021">40823135</a></p>
<p>40823114|Website:<a href="https://40823114.github.io/cd2021">40823114</a>|Repository:<a href="https://github.com/40823114/cd2021">40823114</a></p>
<p>40823146|Website:<a href="https://40823146.github.io/cd2021">40823146</a>|Repository:<a href="https://github.com/40823146/cd2021">40823146</a></p>
<p>stage3_ag5  <a href="https://40823111.github.io/stage3-ag5">網站</a>  <a href="https://github.com/40823111/stage3-ag5">倉儲</a></p>
<p>40823111|Website:<a href="https://40823111.github.io/cd2021">40823111</a>|Repository:<a href="https://github.com/40823111/cd2021">40823111</a></p>
<p>40823115|Website:<a href="https://40823115.github.io/cd2021">40823115</a>|Repository:<a href="https://github.com/40823115/cd2021">40823115</a></p>
<p>40823128|Website:<a href="https://40823128.github.io/cd2021">40823128</a>|Repository:<a href="https://github.com/40823128/cd2021">40823128</a></p>
<p>40823120|Website:<a href="https://40823120.github.io/cd2021">40823120</a>|Repository:<a href="https://github.com/40823120/cd2021">40823120</a></p>
<p>40823140|Website:<a href="https://40823140.github.io/cd2021">40823140</a>|Repository:<a href="https://github.com/40823140/cd2021">40823140</a></p>
<p>40823124|Website:<a href="https://40823124.github.io/cd2021">40823124</a>|Repository:<a href="https://github.com/40823124/cd2021">40823124</a></p>
<p>40823139|Website:<a href="https://40823139.github.io/cd2021">40823139</a>|Repository:<a href="https://github.com/40823139/cd2021">40823139</a></p>
<p>40823126|Website:<a href="https://40823126.github.io/cd2021">40823126</a>|Repository:<a href="https://github.com/40823126/cd2021">40823126</a></p>
<p>stage3_ag6  <a href="https://40823152.github.io/stage3-ag6">網站</a>  <a href="https://github.com/40823152/stage3-ag6">倉儲</a></p>
<p>40823152|Website:<a href="https://40823152.github.io/cd2021">40823152</a>|Repository:<a href="https://github.com/40823152/cd2021">40823152</a></p>
<p>40823110|Website:<a href="https://40823110.github.io/cd2021">40823110</a>|Repository:<a href="https://github.com/40823110/cd2021">40823110</a></p>
<p>40823122|Website:<a href="https://4823122.github.io/cd2021">4823122</a>|Repository:<a href="https://github.com/4823122/cd2021">4823122</a></p>
<p>40823125|Website:<a href="https://40823125.github.io/cd2021">40823125</a>|Repository:<a href="https://github.com/40823125/cd2021">40823125</a></p>
<p>40823117|Website:<a href="https://40823117.github.io/cd2021">40823117</a>|Repository:<a href="https://github.com/40823117/cd2021">40823117</a></p>
<p>40823129|Website:<a href="https://40823129.github.io/cd2021">40823129</a>|Repository:<a href="https://github.com/40823129/cd2021">40823129</a></p>
<p>40823149|Website:<a href="https://40823149.github.io/cd2021">40823149</a>|Repository:<a href="https://github.com/40823149/cd2021">40823149</a></p>
<p>40823153|Website:<a href="https://40823153.github.io/cd2021">40823153</a>|Repository:<a href="https://github.com/40823153/cd2021">40823153</a></p>
<h2>task2</h2>
<p></p>
<h2>task3</h2>
<h1>W13-W14</h1>
<h4>RoboDK 機械手臂</h4>
<p>1.開啟老師提供的pick_and_place檔案和 robodk程式</p>
<p><img alt="" height="59" src="/images/r1.png" width="700"/></p>
<p></p>
<p>2.進入到程式後打開資料</p>
<p><img alt="" height="363" src="/images/r2.png" width="700"/></p>
<p></p>
<p><img alt="" height="579" src="/images/r3.png" width="700"/></p>
<p>3.找到pick_and_place資料夾的範例</p>
<p><img alt="" height="431" src="/images/r4.png" width="700"/></p>
<p>4.導入</p>
<p><img alt="" height="366" src="/images/r5.png" width="700"/></p>
<p>5.找到程式檔案</p>
<p><img alt="" height="516" src="/images/r6.png" width="700"/></p>
<p>6.放到小白框裡</p>
<p><img alt="" height="803" src="/images/r7.png" width="700"/></p>
<p>7.然後在這裡輸入</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">pip install robodk</pre>
<p><img alt="" height="219" src="/images/r8.png" width="700"/></p>
<p>8.然後再把robodk_ip 改成127.0.0.1</p>
<p><img alt="" height="803" src="/images/r9.png" width="700"/></p>
<p></p>
<p>9.完成<img alt="" height="533" src="/images/r10.png" width="700"/></p>
<p></p>
<h1>W15</h1>
<p style="text-align: center;"><strong>Inverse kinematics  翻譯</strong></p>
<p style="text-align: center;"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">Inverse kinematics for a 2-joint robot arm using geometry</yt-formatted-string></p>
<p style="text-align: center;"><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/IKOGwoJ2HLk" title="YouTube video player" width="560"></iframe></p>
<p>We saw this simple two-link robot in the previous<br/>lecture about forward kinematics.</p>
<p>The tooltip pose of this robot is described<br/>simply by two numbers, the coordinates x and</p>
<p>y with respect to the world coordinate frame.</p>
<p>So, the problem here is that given x and y,<br/>we want to determine the joined angles, Q1</p>
<p>and Q2.</p>
<p>The solution that we’re going to follow<br/>in this particular section is a geometric</p>
<p>one.</p>
<p>We’re going to start with a simple piece<br/>of construction.</p>
<p>We’re going to overlay the red triangle<br/>on top of our robot.</p>
<p>We know that the end point coordinate is x,<br/>y, so the vertical height of the triangle</p>
<p>is y, the horizontal width is x.</p>
<p>And, using Pythagoras theorem, we can write<br/>r squared equals x squared plus y squared.</p>
<p>So far, so easy.</p>
<p>Now, we’re going to look at this triangle<br/>highlighted here in red and we want to determine</p>
<p>the angle alpha.</p>
<p>In order to do that, we need to use the cosine<br/>rule.</p>
<p>And, if you’re a little rusty on the cosine<br/>rule, here is a bit of a refresher.</p>
<p>We have an arbitrary triangle.</p>
<p>We don’t have to have any right angles in<br/>it and we’re going to label the length of</p>
<p>this edge as A and the angle opposite that<br/>edge, we’re going to label as little a.</p>
<p>And, we do the same for this edge and this<br/>angle, and this edge and this angle.</p>
<p>So, all together, the sides are labelled capitals<br/>A, B and C, and the angles are labelled little</p>
<p>a, little b, and little c.</p>
<p>So, the cosine rule is simply this relationship<br/>here.</p>
<p>It’s a bit like Pythagoras’ theorem except<br/>for this extra term on the end with the cos</p>
<p>a in it.</p>
<p>Now, let’s apply the cosine rule to the<br/>particular triangle we looked at a moment</p>
<p>ago.</p>
<p>It’s pretty straightforward to write down<br/>this particular relationship.</p>
<p>We can isolate the term cos alpha which gives<br/>us the angle alpha that we’re interested</p>
<p>in.</p>
<p>And, it’s defined in terms of the constant<br/>link lengths, A1 and A2 and the position of</p>
<p>the end effector, x and y.</p>
<p>We can write this simple relationship between<br/>the angles alpha and Q2.</p>
<p>And, we know from the shape of the cosine<br/>function that cos of Q2 must be equal to negative</p>
<p>of cos alpha.</p>
<p>This time, let’s just write an expression<br/>for the cosine of the joined angle Q2.</p>
<p>Now, we’re going to draw yet another red<br/>triangle and we’re going apply some simple</p>
<p>trigonometry here.</p>
<p>If we know Q2, then we know this length and<br/>this length of the red triangle.</p>
<p>We can write this relationship for the sine<br/>of the joined angle Q2.</p>
<p>Now, we can consider this bigger triangle<br/>whose angle is beta and this side length of</p>
<p>the triangle is given here in blue.</p>
<p>And, the length of the other side of the triangle<br/>is this.</p>
<p>So, now we can write an expression for the<br/>angle beta in terms of these parameters here.</p>
<p>Going back to the red triangle that we drew<br/>earlier, we can establish a relationship between</p>
<p>Q1 and the angle beta.</p>
<p>Introduce yet another angle, this one gamma<br/>and we can write a relationship between the</p>
<p>angle gamma and the tooltip coordinates x<br/>and y.</p>
<p>Now, we can write a simple relationship between<br/>the angles that we’ve constructed, gamma</p>
<p>and beta and the joined angle we’re interested<br/>in which is Q1.</p>
<p>And, the total relationship looks something<br/>like this.</p>
<p>Quite a complex relationship, it gives us<br/>the angle of joined one, that’s Q1 in terms</p>
<p>of the end effector coordinates y and x, and<br/>a bunch of constants, a1 and a2, and it’s</p>
<p>also a function of the second joint angle,<br/>Q2.</p>
<p>So, let’s summarize what it is that we have<br/>derived here.</p>
<p>We have an expression for the cosine of Q2<br/>and we have an expression for Q1.</p>
<p>Now, the cosine function is symmetrical about<br/>0.</p>
<p>So, if we know the value of the cosine of<br/>Q2, then there are two possible solutions,</p>
<p>a positive angle and a negative angle.</p>
<p>We’re going to explicitly choose the positive<br/>angle, which means that I can write this expression</p>
<p>here.</p>
<p>And now, we have what we call the inverse<br/>kinematic solution for this two-link robot.</p>
<p>We have an expression for the two joined angles,<br/>Q1 and Q2 in terms of the end effector pose</p>
<p>x and y, and a bunch of constants.</p>
<p>You notice that the two equations are not<br/>independent.</p>
<p>The equation for Q1, in fact, depends on the<br/>solution for Q2.</p>
<p>In this case, Q2 is negative and we’re going<br/>to write the solution for Q2 with a negative</p>
<p>sign in front of the inverse cosine.</p>
<p>Now, we need to solve for Q1, so we’re going<br/>to introduce this particular red triangle,</p>
<p>the angle beta that we solved previously,<br/>and the angle gamma which is defined in terms</p>
<p>of y and x.</p>
<p>Now, we write a slightly different relationship<br/>between Q1, gamma and beta, different to what</p>
<p>we had before.</p>
<p>There’s a change of sign involved.</p>
<p>Then, we can substitute all that previous<br/>equation and come up with this expression</p>
<p>for Q1.</p>
<p>Again, there is a change of sign here.</p>
<p>Previously, this was a negative sign.</p>
<p>And, here in summary form is the solution<br/>for the inverse kinematics of our two-link</p>
<p>robot when it is in this particular configuration,<br/>where Q2 is negative.</p>
<p>Let’s compare the two solutions, the case<br/>where Q2 is positive and the case where Q2</p>
<p>is negative.</p>
<p></p>
<p></p>
<p style="text-align: center;"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">Inverse kinematics for a 2-joint robot arm using algebra</yt-formatted-string></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/eIZuz1XCd0w" title="YouTube video player" width="560"></iframe></p>
<p>Here we have the same two link robot as we<br/>just looked at but this time we're going to</p>
<p>solve it using an analytical approach, that<br/>is we're going to rely much more on algebra,</p>
<p>particular linear algebra rather than geometry.<br/>We have an expression E, which is the homogeneous</p>
<p>transformation which represents the pose of<br/>the robots endefector and we looked at this</p>
<p>in the last lecture, we can write the endefector<br/>pose as a sequence of elementary homogeneous</p>
<p>transformations. A rotation by Q1, a translation<br/>along the X direction by A1, a rotation by</p>
<p>Q2 and then a translation in the X direction<br/>by A2. If I expand this out, multiply all</p>
<p>the transformations together, I get the expression<br/>shown here; a three by three homogeneous transformation</p>
<p>matrix representing the pose of the robot's<br/>endefector.</p>
<p>Now for this particular two link robot, we<br/>are only interested in the position of its</p>
<p>endefector, it's X and Y co-ordinate and they<br/>are these two elements within the homogeneous</p>
<p>transformation matrix, so I'm going to copy<br/>those out. So here again is our expression</p>
<p>for X and Y and what we're going to do is<br/>a fairly common trick, we're going to square</p>
<p>and add these two equations and I get a relationship<br/>that looks like this. Now I can solve for</p>
<p>the joint angle Q2 in terms of the endefector<br/>pose X and Y and the robot's constants A1 and A2.</p>
<p>Now what I'm going to do is apply the sum<br/>of angles identity. I'm going to expand these</p>
<p>terms, sine of Q1 plus Q2 or cos of Q1 plus<br/>Q2 and to make life a little bit easier, I'm</p>
<p>going to make some substations, so where ever<br/>I had cos Q2, I'm going to write C2 and where</p>
<p>ever I had sine Q2, I’m going to write S2.<br/>It's a fairly common shorthand when people</p>
<p>are looking at robot kinematic equations.<br/>And here are the equations after making those</p>
<p>substitutions. Looking at these two equations,<br/>I can see that they fall into a very well</p>
<p>known form and for that form there is a very<br/>well known solution. So I'm going to consider</p>
<p>just one of the equations, the equation for<br/>Y and using our well known identity and it's</p>
<p>solution, I can determine the values for the<br/>variables little a, little b and little c</p>
<p>and once I've determined those, then I can<br/>just write down the solution for Q1, which</p>
<p>is the equivalent of theta in this particular<br/>case.</p>
<p>Here again is our expression for Q1, copied<br/>over from the previous slide and we may remember</p>
<p>from earlier in our workings that we determined<br/>this particular relationship; X squared plus</p>
<p>Y squared is equal to this particular complex<br/>expression. So I can substitute that in and</p>
<p>do some simplification and I end up with this<br/>slightly less complex expression for Q1. And</p>
<p>it is the same expression that I got following<br/>the geometric approach in the previous section.</p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p><h1>W16</h1>
<p></p>
<h4>MTB_robot 的取放方塊流程規劃 (Process Planning):</h4>
<h4>1. Onshape 零組件繪製 (20%)</h4>
<p>零組件必須在<span> </span><a href="https://www.onshape.com/">Onshape</a><span> </span>繪圖, 並提供可公開分享之零組件連結於頁面及回報區中.</p>
<h4>2. 建立 CoppeliaSim 4.1.0 MTB robot 場景 (20%)</h4>
<p>請以自行繪製之零件輸入 CoppeliaSim 後, 組合為 MTB robot 模型, 並利用 Leo Editor 以 require 導入 Lua 程式運作, 分別控制各軸轉動示範, 所完成的所有檔案請存入 W16_exam 後壓縮為 W16_exam.7z 後送至個人 @gm 帳號下的 Google Drive 後將連結設為任何人皆可下載, 並將連結與操作嵌入影片放在 W16 頁面與回報區中 .</p>
<h4>3. 手臂末端加入 components-gripper-suction pad 吸盤 (20%)</h4>
<p>請接續上述 MTB robot, 在其末端接上 force sensor 後接上標準 suction pad 後, 分別導入 W15 週線上課程之鍵盤控制程式後, 拍攝影片示範 W15 線上課程中之操作與示範過程.</p>
<h4>4. 逆向運動學函式 (20%)</h4>
<p>請根據 W15 線上課程內容之 Inverse Kinematics 方程式 (<a href="https://www.youtube.com/watch?v=IKOGwoJ2HLk&amp;t=35s">影片1</a><span> </span>或<a href="https://www.youtube.com/watch?v=eIZuz1XCd0w&amp;t=183s">影片2</a>), 以程式指定方塊取放之兩個位置 - (0.2, 0.7, 0.05) 與 (-0.3, -0.55, 0.05), 以前述 Leo Editor Lua 程式編寫方法, 分別採鍵盤控制與程式迴圈方式執行 W15 兩個指定位置之方塊取放.</p>
<h4>5. Python remote API 逆向運動學函式 (20%)</h4>
<p>請利用 Python remote API 程式重現以迴圈方式執行 W15 兩個指定位置之方塊取放.</p>