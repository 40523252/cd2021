var tipuesearch = {"pages": [{'title': 'About', 'text': '40523252 王彥筑 \n 倉儲： https://github.com/40523252/cd2021 \n 網站： https://40523252.github.io/cd2021/content/index.html \n Stage1分組倉儲： https://github.com/40523252/stage1-ag2 \n Stage1分組網頁： https://40623121.github.io/stage1-ag2/content/index.html \n Stage2分組倉儲： https://github.com/40523252/stage2-ag8 \n Stage2分組網頁： https://40823154.github.io/stage2-ag8/content/index.html \n \n \n', 'tags': '', 'url': 'About.html'}, {'title': '建立網站', 'text': '建立個人倉儲 \n \n 下載老師提供的  kmol2021_spring_v2.7z \n 在cmd中輸入自己的 user name  和  suer email \n 進入此 網址 \n \n \n 在cmd上面輸入 (網址的部分是自己倉儲的網址)\xa0\n git clone --recurse-submodules 網址 \n 例如： \n git clone --recuse-submodules\xa0https://github.com/40523252/cd2021.git \n \n 在網站工具列的Sittings會找到 Github pages \n 把設定設成跟以下圖片一樣建設網頁就可以取得進入網站的網址 \n \n \n \n \xa0 \n \n', 'tags': '', 'url': '建立網站.html'}, {'title': 'SSH流程', 'text': '使用SSH是為了簡化把更新的檔案推送到倉儲的流程 \n \n 1.先在cmd裡輸入sh \n \n \n 2.再按Enter 直到出現以下視窗  底下的路徑是SSH檔案所在位置 \n \n \n 3.找到SSH檔案把id_rsa.pub 放入Scite裡 \n \n \n 4.再進入github網頁 找到Setting 的\xa0 SSH and GPG keys  按下 New SSH key \n \n \n 5.在Title 打上學號 底下文字就複製剛剛放到Scite 裡的一串代碼 \n \n \n 6.到putty 在 Host Name 和 Save Sessions 輸入\xa0 github.com\xa0 \n \n 7.路徑選擇ppk鑰匙檔案 \n \n \n 8.把Start.bat 放入Scite 並進行跟改\xa0 \n \xa0 \xa0寫入 \n set GIT_HOME=%Disk%:\\portablegit\\bin\\\nset GIT_SSH=%Disk%:\\putty\\plink.exe \n \n \n 9.再到倉儲資料夾裡的 .git (隱藏資料夾)\xa0 選擇Config 放入Scite 進行編輯 \n \n \n \n 10.輸入 url=git@github.com:學號/倉儲名稱.git \n \xa0 \xa0 \xa0並且把上面一行註解掉 \n \n \n 11.SSH即可完成 \n', 'tags': '', 'url': 'SSH流程.html'}, {'title': '四人分組W5-W8', 'text': '\xa0 40523252 repo \xa0|\xa0 40523252 site \xa0王彥筑 \n \xa0 40823154 repo \xa0 | \xa0 40823154 site \xa0張宸嘉 \n \xa0 40823103 repo \xa0 | \xa0 40823103 site \xa0呂霈瑜 \n \xa0 40823107 repo \xa0 | \xa0 40823107 site \xa0吳嘉欣 \n', 'tags': '', 'url': '四人分組W5-W8.html'}, {'title': '分配工作', 'text': '\n \n \n 繪製零件圖 \n 40823103\xa0 呂霈瑜 \n \n \n 模擬 \n 40823107\xa0 吳嘉欣 \n \n \n 編輯小組網頁 \n 40523252\xa0 王彥筑 \n \n \n DPF製作 \n 40823154\xa0 張宸嘉 \n \n \n \n', 'tags': '', 'url': '分配工作.html'}, {'title': '討論主題', 'text': 'Pegasus Automata \n \n', 'tags': '', 'url': '討論主題.html'}, {'title': '模擬機構', 'text': 'Solidworks模擬 \n \n \n 第一次組裝時不是很熟悉 雖然看起來組裝好了沒問題\xa0 \n 但是運轉起來還是沒有成功 也卡卡的不太順 \n 沒有定義好 \n \n 第二次模擬 零件不能運轉 應該是轉速不夠 \n 也有可能是扭距不夠 \n \n \n 第三次模擬也是 後來發現齒輪們有對齊到 \n 所以重新繼續定義這些零件 \n \n \n 第四次模擬有比之前好很多 有讓齒輪互相對齊 \n 所以一開始零件可以順利運轉 但是最後還是有問題\xa0 \n 所以沒辦法順利轉動 \n \n \n', 'tags': '', 'url': '模擬機構.html'}, {'title': 'RoboDK的操作流程', 'text': '\n', 'tags': '', 'url': 'RoboDK的操作流程.html'}, {'title': 'TASK', 'text': '\n', 'tags': '', 'url': 'TASK.html'}, {'title': 'task1', 'text': '\n', 'tags': '', 'url': 'task1.html'}, {'title': 'task2', 'text': '\n', 'tags': '', 'url': 'task2.html'}, {'title': 'task3', 'text': '', 'tags': '', 'url': 'task3.html'}, {'title': 'W13-W14', 'text': 'RoboDK 機械手臂 \n 1.開啟老師提供的pick_and_place檔案和 robodk程式 \n \n \n 2.進入到程式後打開資料 \n \n \n \n 3.找到pick_and_place資料夾的範例 \n \n 4.導入 \n \n 5.找到程式檔案 \n \n 6.放到小白框裡 \n \n 7.然後在這裡輸入 \n pip install robodk \n \n 8.然後再把robodk_ip 改成127.0.0.1 \n \n \n 9.完成 \n', 'tags': '', 'url': 'W13-W14.html'}, {'title': 'W15', 'text': '\n \n \n', 'tags': '', 'url': 'W15.html'}, {'title': 'W16', 'text': '\n MTB_robot 的取放方塊流程規劃 (Process Planning): \n 1. Onshape 零組件繪製 (20%) \n 零組件必須在 \xa0 Onshape \xa0 繪圖, 並提供可公開分享之零組件連結於頁面及回報區中. \n 2. 建立 CoppeliaSim 4.1.0 MTB robot 場景 (20%) \n 請以自行繪製之零件輸入 CoppeliaSim 後, 組合為 MTB robot 模型, 並利用 Leo Editor 以 require 導入 Lua 程式運作, 分別控制各軸轉動示範, 所完成的所有檔案請存入 W16_exam 後壓縮為 W16_exam.7z 後送至個人 @gm 帳號下的 Google Drive 後將連結設為任何人皆可下載, 並將連結與操作嵌入影片放在 W16 頁面與回報區中 . \n 3. 手臂末端加入 components-gripper-suction pad 吸盤 (20%) \n 請接續上述 MTB robot, 在其末端接上 force sensor 後接上標準 suction pad 後, 分別導入 W15 週線上課程之鍵盤控制程式後, 拍攝影片示範 W15 線上課程中之操作與示範過程. \n 4. 逆向運動學函式 (20%) \n 請根據 W15 線上課程內容之 Inverse Kinematics 方程式 ( 影片1 \xa0 或 影片2 ), 以程式指定方塊取放之兩個位置 - (0.2, 0.7, 0.05) 與 (-0.3, -0.55, 0.05), 以前述 Leo Editor Lua 程式編寫方法, 分別採鍵盤控制與程式迴圈方式執行 W15 兩個指定位置之方塊取放. \n 5. Python remote API 逆向運動學函式 (20%) \n 請利用 Python remote API 程式重現以迴圈方式執行 W15 兩個指定位置之方塊取放.', 'tags': '', 'url': 'W16.html'}]};